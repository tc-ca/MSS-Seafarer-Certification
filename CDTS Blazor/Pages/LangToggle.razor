@page "/{SelectedLanguage}/langtoggle"
@using Microsoft.Extensions.Logging

@inject NavigationManager navigationManager
@inject SessionStateModel sessionState
@inject ISessionManager sessionManager
@inject ILogger<LangToggle> logger  

@code {
    [Parameter]
    public string SelectedLanguage { get; set; }

    protected override void OnParametersSet()
    {
        base.OnParametersSet();

        var currentLanguage = string.IsNullOrEmpty(sessionState.CurrentLanguage) ? "en" : sessionState.CurrentLanguage;
        var previousUrl = sessionState.LastViewedPage;

        if(!string.IsNullOrEmpty(previousUrl) && !previousUrl.Contains("langload") && !previousUrl.Contains("langtoggle"))
        {
            var previousUrlLangFlipped = previousUrl.Replace($"/{currentLanguage}/", $"/{SelectedLanguage}/");
            logger.LogTrace($"flipped URL:{previousUrlLangFlipped}");

            sessionManager.UpdateSessionState(SelectedLanguage, "");
            navigationManager.NavigateTo(previousUrlLangFlipped, true);
        }
        else
        {;
            navigationManager.NavigateTo($"{navigationManager.BaseUri}{SelectedLanguage}", true);
        }
    }
}

@page "/identitydocuments"
@using CDNApplication.Data.Services;
@using BlazorInputFile;

@inject IAzureBlobService _azureBlobService;
@using Data.Resources

<nav aria-label="progress" class="step-indicator">
    <ul class="steps">
        <li class="complete">
            <a href="/cdnform">@labels_en.CDNApplicationProgressApplicantDetails</a><span class="sr-only">completed</span>
        </li>
        <li class="complete">
            <a href="/mailingaddress">@labels_en.CDNApplicationProgressMailingAddress</a><span class="sr-only">completed</span>
        </li>
        <li class="active" aria-current="true">
            @labels_en.CDNApplicationProgressIdentityDocuments
        </li>
        <li>
            @labels_en.CDNApplicationProgressSignature<span class="sr-only">not completed</span>
        </li>
    </ul>
</nav>

<br />

<div class="wb-frmvld">
    <form role="form" method="get" action="/">
        <div class="form-group">
            <label for="Document">Document</label>
            <InputFile id="Document" multiple class="form-control" OnChange="HandleFileSelected" />
        </div>
    </form>

    @if (@loading == true)
    {
        <div>Loading.....</div>
    }

    @if (fileUploaded == FileUploaded.TRUE)
    {
        <div class="alert alert-success" role="alert">

            @if (@selectedFiles.Length == 1)
            {
                <span> Uploaded 1 file successfully</span>
            }
            else
            {
                <span>Uploaded @selectedFiles.Length files successfully</span>
            }

        </div>
    }
    else if (fileUploaded == FileUploaded.FALSE)
    {
        <div class="alert alert-danger" role="alert">
            Upload was unsucessful
        </div>
    }

    <a class="btn btn-primary" href="/signature" role="button">Next</a>
    <a class="btn btn-secondary" href="/" role="button">Cancel</a>
</div>

@code {

    bool loading = false;

    public FileUploaded fileUploaded { get; set; }

    public IFileListEntry[] selectedFiles = new IFileListEntry[0];

    async void HandleFileSelected(IFileListEntry[] files)
    {

        selectedFiles = files;

        fileUploaded = FileUploaded.DEFAULT;

        loading = true;

        StateHasChanged();

        // Upload the file to the root directory
        var result = await _azureBlobService.UploadMultipleFilesAsync(files);

        loading = false;

        fileUploaded = result.Count == files.Length ? FileUploaded.TRUE : FileUploaded.FALSE;

        StateHasChanged();

    }

    public enum FileUploaded
    {
        DEFAULT,
        TRUE,
        FALSE
    }

}

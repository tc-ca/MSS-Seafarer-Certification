@page "/upload"
@using CDNApplication.Data.Services;
@using BlazorInputFile;

@inject IAzureBlobService azureBlobService;
@using Data.Resources;
@using System.ComponentModel.DataAnnotations;

@using Data;
@using CDNApplication.TCComponents;
@inject NavigationManager navigationManger
@inject IStringLocalizer<Pages.CandidateDocumentNumberForm> localizer

@inherits BaseComponent

<h1>Upload Document</h1>

<EditForm Model="@model" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <div class="form-group">
        <div class="form-control-wrapper">
            <label class="form-control-label" for="CDN-Number">CDN Number</label>
            <InputNumber class="form-control" @bind-Value="@model.CdnNumber"
                         id="CDN-Certification-Selection" />
        </div>
    </div>


    <div class="form-group">
        <div class="form-control-wrapper">
            <label class="form-control-label" for="CDN-Certification-Selection">Certification-Selection</label>
            <InputSelect id="CDN-Certification-Selection" @bind-Value="model.CertificationSelection">
                <option>Spring</option>
                <option>Summer</option>
                <option>Autumn</option>
                <option>Winter</option>
            </InputSelect>
            </div>
        </div>

        <div class="form-group">
            <label for="Document">Upload Documents</label>
            <InputFile id="Document" multiple class="form-control" OnChange="HandleFileSelected" />
        </div>

        <button class="btn btn-primary" type="submit">Submit Application</button>
</EditForm>

@code {

    public IFileListEntry[] selectedFiles = new IFileListEntry[0];

    private Model model = new Model();

    public FileUploaded fileUploaded { get; set; }

    public enum FileUploaded
    {
        DEFAULT,
        SUCCESS,
        FAIL,
    }

    public class Model
    {
        public int CdnNumber { get; set; }

        public string CertificationSelection { get; set; }

        public List<IFileListEntry> selectedFiles { get; set; }

    }

    private void HandleValidSubmit()
    {
        Console.WriteLine("OnValidSubmit");
        //navigationManger.NavigateTo($"{navigationManger.BaseUri}/mailingaddress");
    }

    async void HandleFileSelected(IFileListEntry[] files)
    {

        selectedFiles = files;

        fileUploaded = FileUploaded.DEFAULT;


        StateHasChanged();

        // Upload the file to the root directory
        var result = await azureBlobService.UploadMultipleFilesAsync(files);


        fileUploaded = result.Count == files.Length ? FileUploaded.SUCCESS : FileUploaded.FAIL;

        StateHasChanged();

    }


}

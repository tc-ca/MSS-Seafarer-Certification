
<EditForm EditContext="@EditContext">
    <div class="row">
        <div class="col-12 d-grid gap-3">
            @if (ShowRequestID)
            {
                if (!this.IsReadOnly)
                {
                    <FormInputText readonly="true" Id="RequestID" Label="@Localizer["RequestID"]" @bind-Value="@RequestModel.RequestID" ValidationFor="@(() => RequestModel.RequestID)" />
                }
                else
                {
                    <label class="form-label"><b>@Localizer["RequestID"]</b></label>
                    <p>@RequestModel.RequestID</p>
                }
            }

            @if (!this.IsReadOnly)
            {
                <FormInputSelect Label="@Localizer["RequestType"]" Id="RequestType" SelectLabel="@Localizer["DefaulRequestType"]" ShowDefaultOption="ShowDefaultOption" @bind-Value="@RequestModel.RequestType" ValidationFor="@(() => RequestModel.RequestType)">
                    @foreach (var item in Constants.RequestTypes)
                        {
                        <option value="@item.Id">@item.Text</option>
                        }
                </FormInputSelect>
            }
            else
            {
                <label class="form-label"><b>@Localizer["RequestType"]</b></label>
                foreach (var item in Constants.RequestTypes)
                {
                    if (item.Id == RequestModel.RequestType)
                    {
                        <p>@item.Text</p>
                    }
                }
            }


            @if (!this.IsReadOnly)
            {
                <FormInputSelect Id="CertificateType" Label="@Localizer["CertificateType"]" ShowDefaultOption="ShowDefaultOption" SelectLabel="@Localizer["DefaultCertificateSelect"]" @bind-Value="@RequestModel.CertificateType" ValidationFor="@(() => RequestModel.CertificateType)" Required="true">
                    @foreach (var item in Constants.CertificateTypes)
                        {
                        <option value="@item.Id">@item.Text</option>
                        }
                </FormInputSelect>
            }
            else
            {
                <label class="form-label"><b>@Localizer["CertificateType"]</b></label>
                foreach (var item in Constants.CertificateTypes)
                {
                    if (item.Id == RequestModel.CertificateType)
                    {
                        <p>@item.Text</p>
                    }
                }
            }


            @if (!this.IsReadOnly)
            {
                <FormInputSelect Id="Priority" Label="@Localizer["Priority"]" SelectLabel="@Localizer["DefaultPrioritySelect"]" ShowDefaultOption="ShowDefaultOption" @bind-Value="@RequestModel.Priority" ValidationFor="@(() => RequestModel.SubmissionMethod)" Required="true">
                    @foreach (var item in Constants.Languages)
                        {
                        <option value="@item.Id">@item.Text</option>
                        }
                </FormInputSelect>
            }
            else
            {
                <label class="form-label"><b>@Localizer["Priority"]</b></label>
                @foreach (var item in Constants.Priority)
                {
                    if (@RequestModel.Priority == item.Id)
                    {
                        <p>@item.Text</p>
                    }
                }
            }

            @if (!this.IsReadOnly)
            {
                <FormInputSelect Id="Language" Label="@Localizer["Language"]" SelectLabel="@Localizer["DefaultLanguageSelect"]" ShowDefaultOption="ShowDefaultOption" @bind-Value="@RequestModel.Language" ValidationFor="@(() => RequestModel.SubmissionMethod)" Required="true">
                    @foreach (var item in Constants.Languages)
                        {
                        <option value="@item.Id">@item.Text</option>
                        }
                </FormInputSelect>
            }
            else
            {
                <label class="form-label"><b>@Localizer["Language"]</b></label>
                @foreach (var item in Constants.Languages)
                {
                    if (@RequestModel.Language == item.Id)
                    {
                        <p>@item.Text</p>
                    }
                }
            }

            @if (!this.IsReadOnly)
            {
                <FormInputSelect Id="SubmissionMethod" Label="@Localizer["SubmissionMethod"]" SelectLabel="@Localizer["DefaultSubmissionSelect"]" ShowDefaultOption="ShowDefaultOption" @bind-Value="@RequestModel.SubmissionMethod" ValidationFor="@(() => RequestModel.SubmissionMethod)" Required="true">
                    @foreach (var item in Constants.SubmissionMethods)
                        {
                        <option value="@item.Id">@item.Text</option>
                        }
                </FormInputSelect>
            }
            else
            {
                <label class="form-label"><b>@Localizer["SubmissionMethod"]</b></label>
                @foreach (var item in Constants.SubmissionMethods)
                {
                    if (@RequestModel.SubmissionMethod == item.Id)
                    {
                        <p>@item.Text</p>
                    }
                }

            }


        </div>
    </div>
</EditForm>

@if (!this.IsReadOnly)
{
    <FormInputDate Id="DDInput" Label="@Localizer["DueDate"]" @bind-Value="@RequestModel.DueDate" ValidationFor="@(() => RequestModel.DueDate)" />
}
else
{
    <label class="form-label"><b>@Localizer["DueDate"]</b></label>
    @if (RequestModel.DueDate.HasValue)
    {
        <p>@RequestModel.DueDate.Value.ToString("MMM d, yyyy")</p>
    }
    else
    {
        <p>N/A</p>
    }
}

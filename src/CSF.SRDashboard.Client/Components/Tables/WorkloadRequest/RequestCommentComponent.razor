
<div class="d-flex pb-5">
    <EditForm EditContext="@this.EditContext" OnValidSubmit="SaveComment">
        <FluentValidationValidator />
        @if (!this.ReadOnly)
        {
            <FormInputTextArea Id="InputTextArea" Required="required" Rows="3" Cols="75" @bind-Value="@this.RequestComment.Comment" ValidationFor="@(() => this.RequestComment.Comment)" />
            <div class="d-flex justify-content-end">
                <button type="submit" class="btn btn-outline-primary">Add comment</button>
            </div>
        }
    </EditForm>

</div>

<div class="d-flex align-items-center border-bottom">
    <p class="d-inline pr-3">Comments </p>
    <div class="pr-3" style="flex-basis:40%">
        <EditForm Model="this.SortOption">
            <FormInputSelect Id="InputSelect" ShowDefaultOption="false" Label="" SelectLabel="Select Sort type" Required="required" @bind-Value="SortOption.Text" ValidationFor="@(() => SortOption.Text)" OnChange="ChangeSortOrder">
                @foreach (var item in SortOptions)
                {
                    <option value="@item.Id">@item.Text</option>
                }
            </FormInputSelect>
        </EditForm>
    </div>
    <div>
        <p>@this.WorkComments.Count() Comments</p>
    </div>
</div>
<div>
    @if (!this.IsCommentListEmpty())
    {
        <p>No comments available</p>
    }
    else
    {
        <ul class="pt-2">
            @foreach (var comment in this.WorkComments)
            {
                <li class="CommentListItem">
                    <b>@comment.CreatedBy  @comment.CreatedDateFormatted</b>
                    <p class="mt-1 mr-5">@comment.Comment</p>
                </li>
            }
        </ul>
    }
</div>
<hr />

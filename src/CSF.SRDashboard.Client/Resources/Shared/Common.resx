<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddNote" xml:space="preserve">
    <value>Add Note</value>
  </data>
  <data name="ApplicantDetails" xml:space="preserve">
    <value>Applicant details</value>
  </data>
  <data name="AddRequest" xml:space="preserve">
    <value>Add Request</value>
  </data>
  <data name="AssignedTo" xml:space="preserve">
    <value>Assigned to</value>
  </data>
  <data name="Assignto" xml:space="preserve">
    <value>Assign to</value>
  </data>
  <data name="Attachments" xml:space="preserve">
    <value>Attachments</value>
  </data>
  <data name="BackToDashboard" xml:space="preserve">
    <value>Back to dashboard</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="CandidateDocumentNumber" xml:space="preserve">
    <value>Candidate document number</value>
  </data>
  <data name="CDN" xml:space="preserve">
    <value>CDN</value>
  </data>
  <data name="CertificateType" xml:space="preserve">
    <value>Certificate type</value>
  </data>
  <data name="CertificationSummary" xml:space="preserve">
    <value>Certification summary</value>
  </data>
  <data name="CurrentCertificaties" xml:space="preserve">
    <value>Current certificaties</value>
  </data>
  <data name="CurrentLanguage" xml:space="preserve">
    <value>en</value>
  </data>
  <data name="Date" xml:space="preserve">
    <value>Date</value>
  </data>
  <data name="DateCreated" xml:space="preserve">
    <value>Date created</value>
  </data>
  <data name="DateOfBirth" xml:space="preserve">
    <value>Date of birth</value>
  </data>
  <data name="DateOfExpiry" xml:space="preserve">
    <value>Date of expiry</value>
  </data>
  <data name="DaysRemaining" xml:space="preserve">
    <value>days remaining</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="EnteredBy" xml:space="preserve">
    <value>Entered by</value>
  </data>
  <data name="EnterNoteHere" xml:space="preserve">
    <value>Enter your note here...</value>
  </data>
  <data name="FirstAndLastName" xml:space="preserve">
    <value>First and last name</value>
  </data>
  <data name="FirstName" xml:space="preserve">
    <value>First name</value>
  </data>
  <data name="FitnessStatus" xml:space="preserve">
    <value>Fitness status</value>
  </data>
  <data name="LastName" xml:space="preserve">
    <value>Last name</value>
  </data>
  <data name="MedicalSummary" xml:space="preserve">
    <value>Medical summary</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="NewOrRenewal" xml:space="preserve">
    <value>New or renewal</value>
  </data>
  <data name="NoNotes" xml:space="preserve">
    <value>No notes yet...</value>
  </data>
  <data name="Note" xml:space="preserve">
    <value>Note</value>
  </data>
  <data name="Notes" xml:space="preserve">
    <value>Notes</value>
  </data>
  <data name="Priority" xml:space="preserve">
    <value>Priority</value>
  </data>
  <data name="ProcessingPhase" xml:space="preserve">
    <value>Processing phase</value>
  </data>
  <data name="RequestBoard" xml:space="preserve">
    <value>Request board</value>
  </data>
  <data name="RequestDate" xml:space="preserve">
    <value>Request Date</value>
  </data>
  <data name="RequestDetails" xml:space="preserve">
    <value>Request details</value>
  </data>
  <data name="RequestID" xml:space="preserve">
    <value>Request ID</value>
  </data>
  <data name="RequestInformation" xml:space="preserve">
    <value>Request information</value>
  </data>
  <data name="RequestNumber" xml:space="preserve">
    <value>Request #</value>
  </data>
  <data name="RequestType" xml:space="preserve">
    <value>Request type</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="SeafarerDetails" xml:space="preserve">
    <value>Seafarer details</value>
  </data>
  <data name="SeafarerSearch" xml:space="preserve">
    <value>Seafarer search</value>
  </data>
  <data name="ServiceStandard" xml:space="preserve">
    <value>Service standard</value>
  </data>
  <data name="ShipSafetyBulletin" xml:space="preserve">
    <value>Ship Safety Bulletin</value>
  </data>
  <data name="Status" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="StatusInProgress" xml:space="preserve">
    <value>Status: In progress</value>
  </data>
  <data name="SubmissionMethod" xml:space="preserve">
    <value>Submission method</value>
  </data>
  <data name="Summary" xml:space="preserve">
    <value>Summary</value>
  </data>
  <data name="TombstoneSummary" xml:space="preserve">
    <value>Tombstone summary</value>
  </data>
  <data name="TriageType" xml:space="preserve">
    <value>Triage type</value>
  </data>
  <data name="View" xml:space="preserve">
    <value>View</value>
  </data>
  <data name="ViewFullMedicalFile" xml:space="preserve">
    <value>View full medical file</value>
  </data>
  <data name="ViewFullProfile" xml:space="preserve">
    <value>View full profile</value>
  </data>
  <data name="ViewProfile" xml:space="preserve">
    <value>View profile</value>
  </data>
  <data name="ViewRequest" xml:space="preserve">
    <value>view request</value>
  </data>
  <data name="EditRequest" xml:space="preserve">
    <value>Edit request</value>
  </data>
  <data name="SaveRequest" xml:space="preserve">
    <value>Save request</value>
  </data>
  <data name="AddRequest2" xml:space="preserve">
    <value>add request</value>
  </data>
  <data name="Request" xml:space="preserve">
    <value>Request</value>
  </data>
  <data name="RequestLower" xml:space="preserve">
    <value>request</value>
  </data>
  <data name="Attachment" xml:space="preserve">
    <value>Attachment</value>
  </data>
  <data name="RequiredField" xml:space="preserve">
    <value>Required field</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="DocumentLanguage" xml:space="preserve">
    <value>Document language</value>
  </data>
  <data name="DocumentType" xml:space="preserve">
    <value>Document type</value>
  </data>
  <data name="DocumentTypes" xml:space="preserve">
    <value>Document type(s)</value>
  </data>
  <data name="AddAttachment" xml:space="preserve">
    <value>Add Attachment</value>
  </data>
  <data name="DefaultSelectOption" xml:space="preserve">
    <value>Select</value>
  </data>
  <data name="SelectLanguage" xml:space="preserve">
    <value>Select Language</value>
  </data>
  <data name="SelectDocType" xml:space="preserve">
    <value>Select document type</value>
  </data>
  <data name="DefaulRequestType" xml:space="preserve">
    <value>Select request type</value>
  </data>
  <data name="DefaultCertificateSelect" xml:space="preserve">
    <value>Select certificate type</value>
  </data>
  <data name="DefaultSubmissionSelect" xml:space="preserve">
    <value>Select submission type</value>
  </data>
</root>